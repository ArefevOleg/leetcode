// Дано целое число  n, вернуть counterфункцию. Эта counterфункция сначала возвращает  n ,
// а затем возвращает на 1 больше предыдущего значения каждый раз,
// когда она вызывается ( n, n + 1, n + 2, и т. д.).
// Пример 1:
// Вход:
// п = 10
// ["звонок","звонок","звонок"]
// Вывод: [10,11,12]
//  Объяснение:
//  counter() = 10 // При первом вызове counter() возвращает n.
// counter() = 11 // Возвращает на 1 больше, чем в предыдущий раз.
// counter() = 12 // Возвращает на 1 больше, чем в предыдущий раз.

// Пример 2:
// Вход:
// н = -2
// ["звонок","звонок","звонок","звонок","звонок"]
// Вывод: [-2,-1,0,1,2]
//  Объяснение: counter() изначально возвращает -2. Затем увеличивается после каждого последующего вызова.

var createCounter = function(n) {

  return function() {
    return n++;
  };
};

/**
 * const counter = createCounter(10)
 * counter() // 10
 * counter() // 11
 * counter() // 12
 */